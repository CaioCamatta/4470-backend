name: CI/CD Docker Deployment on EC2

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: 4470-backend_server
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  # Integration:
  #   needs: Build
  #   timeout-minutes: 3
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v1
  #     - name: Create env file
  #       env:
  #         PLACEHOLDER: ${{ secrets.PLACEHOLDER }}
  #       run: |
  #         touch .env
  #         echo PLACEHOLDER="$PLACEHOLDER" >> .env
  #         ls -a
  #         cat .env
  #       shell: bash
  #     - name: Start containers
  #       run: docker-compose up -d

  Deployment:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: 4470-backend_server
          IMAGE_TAG: latest
        with:
          host: ${{ secrets.AWS_EC2_PUBLIC_DNS }}
          username: ${{ secrets.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_PEM }}
          script: |
            ls -a
            docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin $ECR_REGISTRY
            docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG 4470-backend_server
